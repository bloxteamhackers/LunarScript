-- Animação LED rotativa com mudança de cores
spawn(function()
    local colorIndex = 0
    while true do
        if ledBorderGradient and ledBorderGradient.Parent then
            -- Ciclo de cores RGB
            local r = math.sin(colorIndex * 0.1) * 127 + 128
            local g = math.sin(colorIndex * 0.1 + 2) * 127 + 128
            local b = math.sin(colorIndex * 0.1 + 4) * 127 + 128
            
            ledBorderGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(r, g, b)),
                ColorSequenceKeypoint.new(0.25, Color3.fromRGB(g, b, r)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(b, r, g)),
                ColorSequenceKeypoint.new(0.75, Color3.fromRGB(r, b, g)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(r, g, b))
            }
            
            ledBorderGradient.Rotation = colorIndex * 2
            colorIndex = colorIndex + 1
            wait(0.05)
        else
            break
        end
    end
end)

-- Animação do LED do título com mudança de cores
spawn(function()
    local titleColorIndex = 0
    while true do
        if ledGradient and ledGradient.Parent then
            -- Cores alternadas para o título
            local r = math.sin(titleColorIndex * 0.15) * 127 + 128
            local g = math.sin(titleColorIndex * 0.15 + 1.5) * 127 + 128
            local b = math.sin(titleColorIndex * 0.15 + 3) * 127 + 128
            
            ledGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(r, g, b)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(b, r, g)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(r, g, b))
            }
            
            titleColorIndex = titleColorIndex + 1
            wait(0.08)
        else
            break
        end
    end
end)

-- Animação LED dos botões
spawn(function()
    local buttonColorIndex = 0
    while true do
        -- LED dos botões quando não estão ativos
        for _, button in pairs({noclipButton, flyButton, emBreveButton}) do
            local buttonLed = button:FindFirstChild("Frame")
            if buttonLed and button.Text:find("OFF") then
                local r = math.sin(buttonColorIndex * 0.12 + 1) * 100 + 155
                local g = math.sin(buttonColorIndex * 0.12 + 2.5) * 100 + 155
                local b = math.sin(buttonColorIndex * 0.12 + 4) * 100 + 155
                buttonLed.BackgroundColor3 = Color3.fromRGB(r, g, b)
            end
        end
        buttonColorIndex = buttonColorIndex + 1
        wait(0.1)
    end
end)-- Script GUI para Roblox com Teleport, Noclip e Fly
-- Pressione F para abrir/fechar a GUI

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Variáveis de estado
local noclipEnabled = false
local flyEnabled = false
local guiVisible = false
local connections = {}
local dragging = false
local dragStart = nil
local startPos = nil

-- Criar ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UtilityGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Frame principal
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 300, 0, 250)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- Adicionar bordas arredondadas
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

-- Borda LED ao redor da GUI
local ledBorder = Instance.new("Frame")
ledBorder.Size = UDim2.new(1, 6, 1, 6)
ledBorder.Position = UDim2.new(0, -3, 0, -3)
ledBorder.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
ledBorder.BorderSizePixel = 0
ledBorder.ZIndex = mainFrame.ZIndex - 1
ledBorder.Parent = mainFrame

local ledBorderCorner = Instance.new("UICorner")
ledBorderCorner.CornerRadius = UDim.new(0, 13)
ledBorderCorner.Parent = ledBorder

local ledBorderGradient = Instance.new("UIGradient")
ledBorderGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 255)),
    ColorSequenceKeypoint.new(0.3, Color3.fromRGB(255, 0, 255)),
    ColorSequenceKeypoint.new(0.7, Color3.fromRGB(255, 255, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
}
ledBorderGradient.Parent = ledBorder

-- Título
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "Title"
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
titleLabel.BorderSizePixel = 0
titleLabel.Text = "LunarScript"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = mainFrame

-- Efeito LED no título
local ledEffect = Instance.new("Frame")
ledEffect.Size = UDim2.new(1, 0, 0, 3)
ledEffect.Position = UDim2.new(0, 0, 1, -3)
ledEffect.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
ledEffect.BorderSizePixel = 0
ledEffect.Parent = titleLabel

local ledGradient = Instance.new("UIGradient")
ledGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 255)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 0, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
}
ledGradient.Parent = ledEffect

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 10)
titleCorner.Parent = titleLabel

-- Função para criar botões
local function createButton(name, text, position)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0, 120, 0, 35)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.Parent = mainFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 5)
    buttonCorner.Parent = button
    
    -- Efeito LED nos botões
    local buttonLed = Instance.new("Frame")
    buttonLed.Size = UDim2.new(1, 0, 0, 2)
    buttonLed.Position = UDim2.new(0, 0, 1, -2)
    buttonLed.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    buttonLed.BorderSizePixel = 0
    buttonLed.Parent = button
    
    local buttonLedCorner = Instance.new("UICorner")
    buttonLedCorner.CornerRadius = UDim.new(0, 5)
    buttonLedCorner.Parent = buttonLed
    
    return button
end

-- Criar botões
local noclipButton = createButton("NoclipButton", "Noclip: OFF", UDim2.new(0, 20, 0, 60))
local flyButton = createButton("FlyButton", "Fly: OFF", UDim2.new(0, 160, 0, 60))
local emBreveButton = createButton("EmBreveButton", "Em Breve", UDim2.new(0, 90, 0, 110))

-- Info label
local infoLabel = Instance.new("TextLabel")
infoLabel.Size = UDim2.new(1, -20, 0, 30)
infoLabel.Position = UDim2.new(0, 10, 0, 200)
infoLabel.BackgroundTransparency = 1
infoLabel.Text = "Pressione F para abrir/fechar | Arraste para mover"
infoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
infoLabel.TextScaled = true
infoLabel.Font = Enum.Font.Gotham
infoLabel.Parent = mainFrame

-- Funções
local function toggleGUI()
    guiVisible = not guiVisible
    mainFrame.Visible = guiVisible
    
    if guiVisible then
        mainFrame.Size = UDim2.new(0, 0, 0, 0)
        mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        
        local tween = TweenService:Create(mainFrame, 
            TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Size = UDim2.new(0, 300, 0, 250), Position = UDim2.new(0.5, -150, 0.5, -125)}
        )
        tween:Play()
    end
end

-- Função para arrastar a GUI
local function makeDraggable()
    titleLabel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    titleLabel.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                         startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    titleLabel.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

local function teleportPlayer()
    local x = tonumber(xInput.Text)
    local y = tonumber(yInput.Text)
    local z = tonumber(zInput.Text)
    
    if x and y and z and character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = CFrame.new(x, y, z)
    end
end

local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    noclipButton.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
    noclipButton.BackgroundColor3 = noclipEnabled and Color3.fromRGB(45, 85, 45) or Color3.fromRGB(45, 45, 55)
    
    -- Efeito LED quando ativado
    local buttonLed = noclipButton:FindFirstChild("Frame")
    if buttonLed then
        buttonLed.BackgroundColor3 = noclipEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 150, 255)
    end
    
    if noclipEnabled then
        connections.noclip = RunService.Stepped:Connect(function()
            if character and character:FindFirstChild("HumanoidRootPart") then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if connections.noclip then
            connections.noclip:Disconnect()
            connections.noclip = nil
        end
        if character then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end

local function toggleFly()
    flyEnabled = not flyEnabled
    flyButton.Text = "Fly: " .. (flyEnabled and "ON" or "OFF")
    flyButton.BackgroundColor3 = flyEnabled and Color3.fromRGB(45, 45, 85) or Color3.fromRGB(45, 45, 55)
    
    -- Efeito LED quando ativado  
    local buttonLed = flyButton:FindFirstChild("Frame")
    if buttonLed then
        buttonLed.BackgroundColor3 = flyEnabled and Color3.fromRGB(0, 100, 255) or Color3.fromRGB(0, 150, 255)
    end
    
    if flyEnabled and character and character:FindFirstChild("HumanoidRootPart") then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = character.HumanoidRootPart
        
        connections.fly = RunService.Heartbeat:Connect(function()
            if character and character:FindFirstChild("HumanoidRootPart") and bodyVelocity then
                local camera = workspace.CurrentCamera
                local moveVector = humanoid.MoveDirection
                local cameraDirection = camera.CFrame.LookVector
                local cameraRight = camera.CFrame.RightVector
                
                local velocity = Vector3.new(0, 0, 0)
                
                if moveVector.Magnitude > 0 then
                    velocity = (cameraDirection * moveVector.Z + cameraRight * moveVector.X) * 50
                end
                
                -- Controles de subir/descer
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    velocity = velocity + Vector3.new(0, 50, 0)
                elseif UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                    velocity = velocity + Vector3.new(0, -50, 0)
                end
                
                bodyVelocity.Velocity = velocity
            end
        end)
    else
        if connections.fly then
            connections.fly:Disconnect()
            connections.fly = nil
        end
        if character and character:FindFirstChild("HumanoidRootPart") then
            local bodyVelocity = character.HumanoidRootPart:FindFirstChild("BodyVelocity")
            if bodyVelocity then
                bodyVelocity:Destroy()
            end
        end
    end
end

local function teleportPlayer()
    local x = tonumber(xInput.Text)
    local y = tonumber(yInput.Text)
    local z = tonumber(zInput.Text)
    
    if x and y and z and character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = CFrame.new(x, y, z)
    end
end

-- Conectar eventos
noclipButton.MouseButton1Click:Connect(toggleNoclip)
flyButton.MouseButton1Click:Connect(toggleFly)

-- Botão "Em Breve" (sem função por enquanto)
emBreveButton.MouseButton1Click:Connect(function()
    -- Função será adicionada em atualizações futuras
    print("Função em desenvolvimento!")
end)

-- Ativar função de arrastar
makeDraggable()

-- Input para abrir/fechar GUI
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.F then
        toggleGUI()
    end
end)

-- Atualizar referências quando o personagem respawnar
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    
    -- Desabilitar funções ativas
    if noclipEnabled then
        toggleNoclip()
        toggleNoclip()
    end
    if flyEnabled then
        toggleFly()
        toggleFly()
    end
end)

print("GUI carregada! Pressione F para abrir/fechar.")
